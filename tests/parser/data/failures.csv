reap
"CHANGE REPLICATION SOURCE TO
SOURCE_USER=     'plug_user',
SOURCE_PASSWORD= 'plug_user',
SOURCE_RETRY_COUNT= 0"
disable_query_log
enable_query_log
send
REAP
"SELECT CONVERT(TIMESTAMP ""2004-01-22 21:45:33"" USING latin1)"
"SELECT CONVERT(TIMESTAMP ""2004-01-22 21:45:33"", CHAR)"
"SELECT CONVERT(TIMESTAMP ""2004-01-22 21:45:33"", CHAR(4))"
"SELECT CONVERT(TIMESTAMP ""2004-01-22 21:45:33"", BINARY(4))"
"select CAST(TIMESTAMP ""2004-01-22 21:45:33"" AS BINARY(4))"
"SELECT CAST(1/3 AS FLOAT(10)), CAST(1/3 AS FLOAT(53))"
"CREATE VIEW v1 AS SELECT CAST(1/3 AS REAL), CAST(1/3 AS FLOAT(2)), CAST(1/3 AS FLOAT(50))"
"CREATE TRIGGER t1_before_insert_trg BEFORE INSERT ON t1 FOR EACH ROW
BEGIN
IF NEW.f1 = 1 THEN
-- Valid value case.
SET NEW.f2 = '2017-06-06 00:00:00';
ELSEIF NEW.f1 = 2 THEN
-- Check option failure case.
SET NEW.f2 = '2019-06-06 00:00:00';
ELSEIF NEW.f1 = 3 THEN
-- Check constraint failure case.
SET NEW.f2 = '2018-06-06 00:00:00';
END IF;
END;"
"CREATE TRIGGER t1_before_update_trg BEFORE UPDATE ON t1 FOR EACH ROW
BEGIN
IF OLD.f1 = 4 THEN
-- Valid value case.
SET NEW.f2 = '2017-06-06 00:00:00';
ELSEIF OLD.f1 = 5 THEN
-- Check option failure case.
SET NEW.f2 = '2019-06-06 00:00:00';
ELSEIF OLD.f1 = 6 THEN
-- Check constraint failure case.
SET NEW.f2 = '2018-06-06 00:00:00';
END IF;
END;"
"SELECT 1 /*!99999 /* */ */"
"START TRANSACTION READ ONLY, WITH CONSISTENT SNAPSHOT"
"START TRANSACTION READ WRITE, WITH CONSISTENT SNAPSHOT"
"START TRANSACTION WITH CONSISTENT SNAPSHOT, READ ONLY"
"START TRANSACTION WITH CONSISTENT SNAPSHOT, READ WRITE"
"SET TRANSACTION READ ONLY, ISOLATION LEVEL READ COMMITTED"
"SET TRANSACTION READ WRITE, ISOLATION LEVEL READ COMMITTED"
"SET SESSION TRANSACTION READ ONLY, ISOLATION LEVEL REPEATABLE READ"
"CREATE PROCEDURE p1() SET SESSION TRANSACTION READ ONLY,
ISOLATION LEVEL SERIALIZABLE"
"SET SESSION TRANSACTION READ WRITE, ISOLATION LEVEL REPEATABLE READ"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = 8 + 8"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = @gizmo"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = @@global.max_connections"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = DAYOFMONTH('1972-07-29')"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = CAST(RAND() * 10 AS SIGNED)"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = 1024 * 1024 * 1024 * 1024"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = -100"
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = ON"
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = ""ON"""
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = OFF"
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = ""OFF"""
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = gizmo"
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = 1"
"INSTALL COMPONENT ""file://component_validate_password"" SET check_user_name = 11"
"INSTALL COMPONENT ""file://component_validate_password""
SET GLOBAL validate_password.length = 16"
"INSTALL COMPONENT ""file://component_validate_password""
SET validate_password.length = 16, PERSIST validate_password.number_count = 13"
"INSTALL COMPONENT ""file://component_validate_password""
SET validate_password.length = 16"
"INSTALL COMPONENT ""file://component_validate_password""
SET GLOBAL validate_password.length = 60, validate_password.number_count = 50"
"INSTALL COMPONENT ""file://component_validate_password"" SET length = 12"
"select 1ea10.1a20,1e+ 1e+10 from 1ea10"
"CREATE PROCEDURE IF NOT EXISTS sp1() BEGIN END"
"CREATE FUNCTION IF NOT EXISTS sf1() RETURNS INT DETERMINISTIC return 0"
"CREATE FUNCTION IF NOT EXISTS abs() RETURNS INT DETERMINISTIC return 0"
"CREATE FUNCTION IF NOT EXISTS metaphon() RETURNS INT DETERMINISTIC return 0"
"CREATE TRIGGER IF NOT EXISTS trg1 BEFORE INSERT ON t1 FOR EACH ROW BEGIN END"
"CREATE TABLE t1 (f1 INT) START TRANSACTION"
"CREATE PROCEDURE proc1()
BEGIN
CREATE TABLE t1 (f1 INT) START TRANSACTION;
ROLLBACK;
CREATE TABLE t1 (f1 INT) START TRANSACTION;
COMMIT;
END"
"SELECT MAX(k COLLATE latin1_german2_ci)
FROM t1
WHERE
SELECT *
FROM t1
WHERE (_latin1'Mu""ller' COLLATE latin1_german2_ci) = k
HAVING
SELECT *
FROM t1
HAVING (_latin1'Mu""ller' COLLATE latin1_german2_ci) = k"
"ALTER DATABASE DEFAULT CHARACTER SET latin2"
" ¡¢£¤¥±º»¼½¾ 
05
15
25
35
4

SET NAMES gb18030"
"SELECT HEX('²@\') FROM DUAL;



CREATE TABLE t1 (a varchar(16)) character set sjis;
INSERT INTO t1 VALUES (0x8372835E),(0x8352835E);
SELECT hex(a), hex(lower(a)), hex(upper(a)) FROM t1 ORDER BY binary(a);
DROP TABLE t1;

SELECT QUOTE('\')"
"FLUSH TABLES mysql.events"
disable_result_log
enable_result_log
"EXPLAIN
DELETE LOW_PRIORITY QUICK IGNORE
FROM t1 PARTITION (p1)
WHERE c1 > 0
ORDER BY c2
LIMIT 10"
echo
"FLUSH LOCAL TABLES test.t1, test.t2 for ExPoRt"
"FLUSH TABLE db1.t1 FOR EXPORT"
"FLUSH LOCAL TABLES test.t1 FOR EXPORT"
"create table t1 (
a int not null,
b int not null references t2 (c),
primary key (a,b),
foreign key (a,b) references t3 (c,d) on delete no action
on update no action,
foreign key (a,b) references t3 (c,d) on update cascade,
foreign key (a,b) references t3 (c,d) on delete set default,
foreign key (a,b) references t3 (c,d) on update set null) engine=myisam"
"SELECT cast(TIMESTAMP'2019-10-10 10:11:12' AT TIME ZONE 'UTC' AS DATETIME)"
"SELECT cast(TIMESTAMP'2019-10-10 10:11:12' AT TIME ZONE '+00:00' AS DATETIME)"
"SELECT cast(TIMESTAMP'2019-10-10 10:11:12+00:00' AT TIME ZONE '+00:00' AS DATETIME)"
"SELECT cast( a AT TIME ZONE '+00:00' AS DATETIME ) FROM t1"
"select hex(weight_string('aa' as binary(3)))"
"SELECT HEX(WEIGHT_STRING('ab' AS BINARY(1000000)))"
"CREATE VIEW v5 AS SELECT WEIGHT_STRING(a AS BINARY(2)) AS b FROM t1"
"CREATE VIEW v6 AS SELECT WEIGHT_STRING(a AS BINARY(6)) AS b FROM t1"
"SELECT HEX(WEIGHT_STRING(a AS BINARY(2))) FROM t1"
"SELECT HEX(WEIGHT_STRING(a AS BINARY(6))) FROM t1"
"CREATE PROCEDURE run_show_and_i_s_stmts() BEGIN
SHOW CREATE TABLE t1;
SHOW COLUMNS FROM t1;
SHOW EXTENDED COLUMNS FROM t1;
SHOW KEYS FROM t1;

-- I_S.TABLES
SELECT TABLE_NAME, AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME='t1';
-- I_S.COLUMNS
SELECT COLUMN_NAME, COLUMN_TYPE, IS_NULLABLE, EXTRA
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME='t1' ORDER BY ORDINAL_POSITION;
-- I_S.COLUMN_EXTENSIONS
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS_EXTENSIONS
WHERE TABLE_NAME='t1' ORDER BY COLUMN_NAME;
-- I_S.STATISTICS
SELECT INDEX_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.STATISTICS
WHERE TABLE_NAME='t1' ORDER BY INDEX_NAME, COLUMN_NAME;
-- I_S.KEY_COLUMN_USAGE
SELECT CONSTRAINT_NAME, COLUMN_NAME
FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE TABLE_NAME='t1'
ORDER BY CONSTRAINT_NAME, COLUMN_NAME;
-- I_S.TABLE_CONSTRAINTS
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, ENFORCED
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_NAME='t1'
ORDER BY CONSTRAINT_NAME;
-- I_S.TABLE_CONSTRAINTS_EXTENSIONS
SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS_EXTENSIONS
WHERE TABLE_NAME='t1' ORDER BY CONSTRAINT_NAME;
END;
"
"CREATE TABLE t1 (g GEOMCOLLECTION)"
"alter user mysqltest_7@ identified by 'systpass'"
"CREATE TEMPORARY TABLE t6(a INT) ENGINE = MERGE UNION = ()"
"ALTER TABLE t6 UNION = ()"
"ALTER TABLE mysqltest_db2.t2_2 UNION = ()"
"flush table mysqltest_db1.t1"
enable_connect_log
disable_connect_log
"insert into t2 select
x3.a,  -- 3
concat('val-', x3.a + 3*x4.a), -- 12
concat('val-', @a:=x3.a + 3*x4.a + 12*C.a), -- 120
concat('val-', @a + 120*D.a)
from t1 x3, t1 x4, t1 C, t1 D where x3.a < 3 and x4.a < 4 and D.a < 4
order by x3.a, x4.a, C.a, D.a"
"EXPLAIN SELECT a FROM t1 IGNORE INDEX FOR ORDER BY (PRIMARY)
IGNORE INDEX FOR GROUP BY (i2) GROUP BY a"
"EXPLAIN SELECT a FROM t1 IGNORE INDEX (PRIMARY) IGNORE INDEX FOR ORDER BY (i2)"
"EXPLAIN SELECT a FROM t1 USE INDEX () USE INDEX (i2)"
"EXPLAIN SELECT a FROM t1 USE INDEX (i2) USE INDEX ()"
"EXPLAIN SELECT a FROM t1 USE INDEX FOR JOIN (i2)
USE INDEX FOR GROUP BY (i2) GROUP BY a"
"EXPLAIN SELECT a FROM t1 FORCE INDEX FOR JOIN (i2)
FORCE INDEX FOR GROUP BY (i2) GROUP BY a"
"EXPLAIN SELECT a FROM t1 USE INDEX () IGNORE INDEX (i2)"
"EXPLAIN SELECT a FROM t1 IGNORE INDEX (i2) USE INDEX ()"
"EXPLAIN SELECT a FROM t1
USE INDEX FOR GROUP BY (i2)
USE INDEX FOR ORDER BY (i2)
USE INDEX FOR JOIN (i2)"
"EXPLAIN SELECT a FROM t1
USE INDEX FOR JOIN (i2)
USE INDEX FOR JOIN (i2)
USE INDEX FOR JOIN (i2,i2)"
"EXPLAIN SELECT 1 FROM t1 WHERE a IN
(SELECT a FROM t1 USE INDEX (i2) IGNORE INDEX (i2))"
"EXPLAIN SELECT 1 FROM t2 WHERE a IN
(SELECT a FROM t1 USE INDEX (i2) IGNORE INDEX (i2))"
"GRANT some_user_name@host_1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890 TO root@localhost"
"GRANT u1@localhost TO some_user_name@host_1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890abcdefghij1234567890"
"CREATE TABLE t1 (f1 INTEGER, b INTEGER AS ((1)) INVISIBLE, KEY k1(b))"
enable_info
disable_info
disable_reconnect
enable_reconnect
disable_warnings
"log_sink_test"";

disable_warnings;
SET @@global.dragnet.log_error_filter_rules= @rules;
SET @@global.log_error_services=""log_filter_dragnet"
"SELECT ""Too long: â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââA7UÎ·)R|5æªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼AZ0UÎ»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£â¼Î»â®Î³Î¶ââ¤âââæªç£"""
"FLUSH TABLE mysql.general_log"
"FLUSH TABLE mysql.slow_log"
"CREATE TABLE m1(a INT) ENGINE=MERGE UNION=()"
"ALTER TABLE m1 UNION=()"
"FLUSH TABLE mysql_db1.t1"
enable_warnings
"CREATE TABLE x3 (c0 BLOB AS ('a') VIRTUAL INVISIBLE, c1 INT)"
"CREATE TABLE x4 (c1 INT, c0 BLOB AS ('a') VIRTUAL INVISIBLE)"
"CREATE TABLE x7 (c0 BLOB AS ('a') STORED INVISIBLE, c1 INT)"
"CREATE TABLE x8 (c1 INT, c0 BLOB AS ('a') STORED INVISIBLE)"
"CREATE TABLE t1(f1 INT INVISIBLE, f2 INT,
f3 INT AS (f1 + 10), f4 INT AS (f2 + 10) INVISIBLE)"
"CREATE TABLE B32340208.test (
`pk` int NOT NULL AUTO_INCREMENT,
`a1` smallint GENERATED ALWAYS AS (((0 <> `c1`) and (_utf8mb4'0000-00-00
00:00:00' <> `d1`))) VIRTUAL NOT SECONDARY,
`b1` char(8) DEFAULT NULL,
`c1` longblob NOT NULL NOT SECONDARY,
`d1` timestamp NOT NULL,
PRIMARY KEY (`pk`),
KEY `functional_index` ((radians(`c1`))) USING BTREE COMMENT 'you''re'
) ENGINE=InnoDB DEFAULT CHARSET=euckr"
"SELECT 'a%' LIKE 'a!%' ESCAPE '!', 'a%' LIKE 'a!' || '%' ESCAPE '!'"
"SELECT 'a%' NOT LIKE 'a!%' ESCAPE '!', 'a%' NOT LIKE 'a!' || '%' ESCAPE '!'"
"SELECT 'a%' LIKE 'a!%' ESCAPE '$', 'a%' LIKE 'a!' || '%' ESCAPE '$'"
"SELECT 'a%' NOT LIKE 'a!%' ESCAPE '$', 'a%' NOT LIKE 'a!' || '%' ESCAPE '$'"
"SELECT cast( NULL AT TIME ZONE 'UTC' AS DATETIME )"
"DELETE FROM t1 PARTITION(subp1) WHERE b = ""REPLACEd by REPLACE"""
"DELETE FROM t1 PARTITION (pNeg) WHERE a = -1"
"DELETE FROM t1 PARTITION (subp1) WHERE b like '%subp1%'"
"DELETE FROM t1 PARTITION (subp1) WHERE b = 'p0-9:subp3'"
"DELETE FROM t1 PARTITION (`p0-9`) WHERE b = 'p0-9:subp3'"
"DELETE FROM t1 PARTITION (subp3)"
"DELETE FROM t1 PARTITION (`p0-29`)"
"DELETE FROM t1 PARTITION (p2)"
"DELETE FROM t1 PARTITION (p0)
WHERE a = (SELECT a + 2 FROM t2 WHERE a = 1)"
"EXPLAIN DELETE FROM t1 PARTITION (p0)
WHERE a = (SELECT a + 2 FROM t2 WHERE a = 1)"
"create table t9 (a date not null) partition by RANGE(TO_DAYS(a)) (
partition p0 values less than (732299), -- 2004-12-19
partition p1 values less than (732468), -- 2005-06-06
partition p2 values less than (732664)  -- 2005-12-19
)"
"RESET PERSIST default.key_buffer_size"
"set @a= timestamp ""2001-01-02 10:11:12.345"""
"set @a=date ""2001-01-02"""
"set @a= time ""10:11:12.345"""
"set @a= time ""01:02:00"""
"set @a= timestamp ""2001-01-02 01:02:00"""
"set @a= date ""2001-01-02"""
"query_attributes a b"
"query_attributes a b c d"
"query_attributes 'a' ""b c"""
"query_attributes '' 'a'"
reset_connection
"GRANT CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE, CREATE ROLE, DROP ROLE ON *.* TO u2"
"CHANGE REPLICATION SOURCE TO SOURCE_PASSWORD='azundris3'"
"SET PASSWORD = '' REPLACE ''"
"SET PASSWORD='789' REPLACE '456'"
"SET PASSWORD='azundris2' REPLACE 'azundris2'"
"CHANGE REPLICATION SOURCE TO SOURCE_PASSWORD='azundris3',
SOURCE_BIND = 'eth4n',
SOURCE_TLS_CIPHERSUITES = ''
FOR CHANNEL 'chan_jackie'"
"CHANGE REPLICATION SOURCE TO SOURCE_PASSWORD='azundris3',
SOURCE_CONNECT_RETRY = 1, SOURCE_HEARTBEAT_PERIOD = 1.01,
SOURCE_LOG_FILE = 'master_log_name', SOURCE_LOG_POS = 0,
SOURCE_SSL = 0, SOURCE_SSL_CA = 'ca_file_name',
SOURCE_SSL_CAPATH = 'ca_directory_name',
SOURCE_SSL_CERT = 'cert_file_name', SOURCE_SSL_KEY = 'key_file_name',
SOURCE_SSL_CIPHER = 'cipher_list', SOURCE_SSL_VERIFY_SERVER_CERT = 1,
SOURCE_SSL_CRL = 'crl_file_name', SOURCE_SSL_CRLPATH = 'crl_directory_name',
IGNORE_SERVER_IDS = (99,100), SOURCE_TLS_VERSION = 'TLSv1.2',
SOURCE_TLS_CIPHERSUITES = NULL,
SOURCE_BIND = 'eth4n', SOURCE_RETRY_COUNT = 7,
SOURCE_DELAY = 4711, SOURCE_AUTO_POSITION = 0 FOR CHANNEL 'chan_jackie'"
"GRANT b30896461_test1@localhost TO b30896461_test2@localhost"
"GRANT role1, `role2`@`host2`, role3 TO user1, user2, `user3`@`host3`"
"GRANT `engineering`@`US` TO `engineering`@`INDIA`"
"REVOKE role1, `role2`@`host2`, role3 FROM user1, user2, `user3`@`host3`"
"GRANT CREATE ROLE, DROP ROLE ON *.* TO r1"
"GRANT r1@Vilhelmina TO u1@localhost"
"GRANT 'r1'@'' TO 'u1'@''"
"GRANT 'r2'@'' TO 'u1'@''"
"REVOKE 'r1'@'' FROM 'u1'@''"
"REVOKE 'r2'@'' FROM 'u1'@''"
"GRANT CREATE ROLE, DROP ROLE ON *.* TO uu@localhost"
"GRANT `r_verifier`@`localhost` TO `TestUserFails`@`localhost`"
"GRANT CREATE ROLE, DROP ROLE ON *.* TO b35471453@localhost"
"REVOKE CREATE ROLE, DROP ROLE, SET_USER_ID ON *.* FROM b35471453@localhost"
"CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_LOG_FILE='binlog-ch1.000001', SOURCE_LOG_POS=4 FOR CHANNEL 'ch1'"
"CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_LOG_FILE='binlog-ch2.000001', SOURCE_LOG_POS=4 FOR CHANNEL 'ch2'"
"CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_LOG_FILE=""binlog-default.000001"", SOURCE_LOG_POS=4 FOR CHANNEL ''"
"ALTER SCHEMA s1 READ ONLY DEFAULT"
"START TRANSACTION READ ONLY,  WITH CONSISTENT SNAPSHOT"
"SET TRANSACTION   READ ONLY, ISOLATION LEVEL SERIALIZABLE"
"FLUSH TABLE mysql.procs_priv"
"create procedure p1()
begin
declare v_stmt_text varchar(255);
declare v_id integer;
declare done int default 0;
declare c cursor for select id, stmt_text from t1;
declare continue handler for 1295 -- ER_UNSUPPORTED_PS
set @status='not supported';
declare continue handler for 1064 -- ER_SYNTAX_ERROR
set @status='syntax error';
declare continue handler for sqlstate '02000' set done = 1;

prepare update_stmt from ""update t1 set status=? where id=?"";
open c;
repeat
if not done then
fetch c into v_id, v_stmt_text;
set @id=v_id, @stmt_text=v_stmt_text;
set @status=""supported"";
prepare stmt from @stmt_text;
execute update_stmt using @status, @id;
end if;
until done end repeat;
deallocate prepare update_stmt;
end"
"create procedure h_ee()
deterministic
begin
declare continue handler for 1062 -- ER_DUP_ENTRY
select 'Outer (bad)' as 'h_ee';

begin
declare continue handler for 1062 -- ER_DUP_ENTRY
select 'Inner (good)' as 'h_ee';

insert into t3 values (1);
end;
end"
"create procedure h_es()
deterministic
begin
declare continue handler for 1062 -- ER_DUP_ENTRY
select 'Outer (bad)' as 'h_es';

begin
-- integrity constraint violation
declare continue handler for sqlstate '23000'
select 'Inner (good)' as 'h_es';

insert into t3 values (1);
end;
end"
"create procedure h_en()
deterministic
begin
declare continue handler for 1329 -- ER_SP_FETCH_NO_DATA
select 'Outer (bad)' as 'h_en';

begin
declare x int;
declare continue handler for sqlstate '02000' -- no data
select 'Inner (good)' as 'h_en';

select a into x from t3 where a = 42;
end;
end"
"create procedure h_ew()
deterministic
begin
declare continue handler for 1264 -- ER_WARN_DATA_OUT_OF_RANGE
select 'Outer (bad)' as 'h_ew';

begin
declare continue handler for sqlwarning
select 'Inner (good)' as 'h_ew';

insert into t3 values (123456789012);
end;
delete from t3;
insert into t3 values (1);
end"
"create procedure h_ex()
deterministic
begin
declare continue handler for 1062 -- ER_DUP_ENTRY
select 'Outer (bad)' as 'h_ex';

begin
declare continue handler for sqlexception
select 'Inner (good)' as 'h_ex';

insert into t3 values (1);
end;
end"
"create procedure h_se()
deterministic
begin
-- integrity constraint violation
declare continue handler for sqlstate '23000'
select 'Outer (bad)' as 'h_se';

begin
declare continue handler for 1062 -- ER_DUP_ENTRY
select 'Inner (good)' as 'h_se';

insert into t3 values (1);
end;
end"
"create procedure h_ss()
deterministic
begin
-- integrity constraint violation
declare continue handler for sqlstate '23000'
select 'Outer (bad)' as 'h_ss';

begin
-- integrity constraint violation
declare continue handler for sqlstate '23000'
select 'Inner (good)' as 'h_ss';

insert into t3 values (1);
end;
end"
"create procedure h_sn()
deterministic
begin
-- Note: '02000' is more specific than NOT FOUND ;
--       there might be other not found states
declare continue handler for sqlstate '02000' -- no data
select 'Outer (bad)' as 'h_sn';

begin
declare x int;
declare continue handler for not found
select 'Inner (good)' as 'h_sn';

select a into x from t3 where a = 42;
end;
end"
"create procedure h_sw()
deterministic
begin
-- data exception - numeric value out of range
declare continue handler for sqlstate '22003'
select 'Outer (bad)' as 'h_sw';

begin
declare continue handler for sqlwarning
select 'Inner (good)' as 'h_sw';

insert into t3 values (123456789012);
end;
delete from t3;
insert into t3 values (1);
end"
"create procedure h_sx()
deterministic
begin
-- integrity constraint violation
declare continue handler for sqlstate '23000'
select 'Outer (bad)' as 'h_sx';

begin
declare continue handler for sqlexception
select 'Inner (good)' as 'h_sx';

insert into t3 values (1);
end;
end"
"create procedure h_ne()
deterministic
begin
declare continue handler for not found
select 'Outer (bad)' as 'h_ne';

begin
declare x int;
declare continue handler for 1329 -- ER_SP_FETCH_NO_DATA
select 'Inner (good)' as 'h_ne';

select a into x from t3 where a = 42;
end;
end"
"create procedure h_ns()
deterministic
begin
declare continue handler for not found
select 'Outer (bad)' as 'h_ns';

begin
declare x int;
declare continue handler for sqlstate '02000' -- no data
select 'Inner (good)' as 'h_ns';

select a into x from t3 where a = 42;
end;
end"
"create procedure h_we()
deterministic
begin
declare continue handler for sqlwarning
select 'Outer (bad)' as 'h_we';

begin
declare continue handler for 1264 -- ER_WARN_DATA_OUT_OF_RANGE
select 'Inner (good)' as 'h_we';

insert into t3 values (123456789012);
end;
delete from t3;
insert into t3 values (1);
end"
"create procedure h_ws()
deterministic
begin
declare continue handler for sqlwarning
select 'Outer (bad)' as 'h_ws';

begin
-- data exception - numeric value out of range
declare continue handler for sqlstate '22003'
select 'Inner (good)' as 'h_ws';

insert into t3 values (123456789012);
end;
delete from t3;
insert into t3 values (1);
end"
"create procedure h_xe()
deterministic
begin
declare continue handler for sqlexception
select 'Outer (bad)' as 'h_xe';

begin
declare continue handler for 1062 -- ER_DUP_ENTRY
select 'Inner (good)' as 'h_xe';

insert into t3 values (1);
end;
end"
"create procedure h_xs()
deterministic
begin
declare continue handler for sqlexception
select 'Outer (bad)' as 'h_xs';

begin
-- integrity constraint violation
declare continue handler for sqlstate '23000'
select 'Inner (good)' as 'h_xs';

insert into t3 values (1);
end;
end"
"create procedure mysqltest1.p1()
begin
alter database character set koi8r;
end"
"CREATE FUNCTION f1() RETURNS INT DETERMINISTIC
BEGIN
DECLARE a int;
-- SQL statement inside
SELECT 1 INTO a;
RETURN a;
END "
"CREATE EVENT e1 ON SCHEDULE EVERY 1 SECOND STARTS NOW() DO
BEGIN
DECLARE EXIT HANDLER FOR 1136 BEGIN
INSERT INTO t3 VALUES (1);
END; -- ER_WRONG_VALUE_COUNT_ON_ROW

SELECT GET_LOCK('e1_lock', 60);
SELECT RELEASE_LOCK('e1_lock');

INSERT INTO t2 SELECT * FROM t1;
END"
"ALTER INSTANCE RELOAD TLS"
"ALTER INSTANCE RELOAD TLS NO ROLLBACK ON ERROR"
"FLUSH TABLE schema1.t1"
"CREATE TABLESPACE ts1 ENGINE_ATTRIBUTE=''"
"CREATE TABLESPACE ts2 ENGINE_ATTRIBUTE='{""c"": ""v""}'"
"ALTER TABLESPACE ts1 ENGINE_ATTRIBUTE='{""foo"": ""bar""}'"
"create temporary table tg (i int not null) engine=merge union=()"
"SELECT JSON_VALUE('{""data"": ""2019-01-01 11:11::11""}', '$.data' RETURNING DATETIME) AS v"
"SELECT JSON_VALUE('{""data"": ""2019-01/01""}', '$.data' RETURNING DATE) AS v"
"SELECT JSON_VALUE('{""data"": ""10:11:12.098700    ""}', '$.data' RETURNING TIME) AS v"
"load data infile '../../std_data/words.dat' into table t1 (a) set b:= f1()"
"SELECT 10,10.0,10.,.1e+2,100.0e-1"
"create table t1 (c nchar varchar(10))"
"create table t1 (c national character varying(10))"
"create table t1 (c nchar varying(10))"
"CREATE USER foo2@localhost IDENTIFIED BY 'foo' COMMENT 'xxx'"
"CREATE USER foo3 PASSWORD EXPIRE DEFAULT COMMENT 'abc'"
"CREATE USER foo4 ACCOUNT LOCK ATTRIBUTE '{""stuff"":""ffuts""}'"
"CREATE USER u1 COMMENT 'Hello ""Smith""'"
"CREATE USER u1@localhost IDENTIFIED BY 'foo' COMMENT 'Not permitted to change this'"
"CREATE USER u1@localhost IDENTIFIED BY 'foo',u2@localhost IDENTIFIED BY 'foo' COMMENT ""Works with partial restrictions"""
"create table table_28127_a(0b02 int)"
"create table table_28127_b(0b2 int)"
"CREATE PROCEDURE p2(n INT) DO LEAD(1, n) OVER()"
"CREATE PROCEDURE p3(n INT) DO LAG(1, n) OVER()"
"DO LAG(1, @v) OVER()"
"DO LEAD(1, @v) OVER()"
